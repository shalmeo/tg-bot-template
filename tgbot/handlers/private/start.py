import re

from typing import Union
from aiogram import Dispatcher, types
from aiogram.dispatcher.filters import CommandStart
from sqlalchemy import select
from sqlalchemy.ext.asyncio import AsyncSession

from tgbot.keyboards.reply import menu_kb
from tgbot.misc.allow_acc import allow_acces
from tgbot.misc.referal import add_referal
from tgbot.keyboards.inline import starting_kb
from tgbot.services.database.models import User


async def start_for_new(obj: Union[types.Message, types.CallbackQuery]):
    send_message = obj.message.edit_text if isinstance(obj, types.CallbackQuery) else obj.answer
    
    await send_message("–ü—Ä–∏–≤–µ—Ç üëã\n"
                       "–ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º ü§ñ, —Ç–µ–±–µ –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ–¥–∏–Ω –∏–∑ —ç—Ç–∏—Ö –ø—É–Ω–∫—Ç–æ–≤:\n\n"
                       "üìç –ë—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –Ω–∞ –Ω–∞—à –Ω–æ–≤–æ—Å—Ç–Ω–æ–π –∫–∞–Ω–∞–ª\n"
                       "üìç –ë—ã—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã–º –æ—Ç –∫–æ–≥–æ-–ª–∏–±–æ\n"
                       "üìç –í–≤–µ—Å—Ç–∏ –∫–æ–¥ –ø—Ä–∏–≥–∞—Å–∏–≤—à–µ–≥–æ", reply_markup=starting_kb())


async def user_start(message: types.Message):
    await message.answer('–í—ã –±—ã–ª–∏ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã –≤ –º–µ–Ω—é! üéõ', reply_markup=menu_kb())
    

@allow_acces()
async def user_start_with_deeplink(message: types.Message, session: AsyncSession, user: User):
    ref_id = int(message.get_args())
    result = await session.execute(select(User).where(User.user_id==ref_id))
    ref: User = result.scalars().first()
    
    if ref:
        await message.answer('–í—ã –±—ã–ª–∏ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã –≤ –º–µ–Ω—é! üéõ', reply_markup=menu_kb())
        await add_referal(session=session, ref=ref, user=user)
    else:
        await start_for_new(message)
    

def setup(dp: Dispatcher):
    dp.register_message_handler(user_start_with_deeplink, CommandStart(deep_link=re.compile(r'^\d{1,}$')), 
                                                          state='*', is_user=True)
    dp.register_message_handler(user_start, commands=["start"], state='*')